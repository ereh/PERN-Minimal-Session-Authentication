{"ast":null,"code":"var _jsxFileName = \"/Users/eruei/repo/euler/client/src/utils/use-auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// from https://usehooks.com/useAuth/\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport axios from \"./axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(); // This effect runs on refresh / component rendering\n  // Saves user into AuthProvider context (read from localStorage)\n\n  useEffect(() => {\n    async function meQuery() {\n      try {\n        const response = await axios.get(\"/users/me\");\n        setUser(response.data);\n        console.log(\"Me query resulted in:\");\n        console.log(response.data);\n      } catch (error) {\n        setUser(null);\n        return null;\n      }\n    }\n    /*\n    console.log(\"Use effect Started\");\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      console.log(\"user found in session storage:\");\n      setUser(user);\n      console.log(user);\n    } else {\n      console.log(\"user not found in session storage.\");\n      setUser(null);\n    }\n     console.log(user);\n    console.log(\"useEffect Ends\");*/\n\n  }, []); // Logs in user\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post(\"/users/login\", {\n        username: username,\n        password: password\n      });\n      setUser(response.data);\n      return response.data;\n    } catch (error) {\n      return null;\n    }\n  }; // Register new user\n\n\n  const register = (email, password) => {\n    console.log(\"register() is NOT IMPLEMENTED\");\n    return null; //return user\n  }; //Logs out user\n\n\n  const logout = async () => {\n    try {\n      const response = await axios.get(\"/users/logout\");\n      setUser(null);\n    } catch (error) {\n      return null;\n    }\n  };\n\n  const auth = {\n    user,\n    login,\n    logout,\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(AuthProvider, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/eruei/repo/euler/client/src/utils/use-auth.js"],"names":["React","useState","useEffect","useContext","createContext","axios","AuthContext","useAuth","AuthProvider","children","user","setUser","meQuery","response","get","data","console","log","error","login","username","password","post","register","email","logout","auth"],"mappings":";;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEA,OAAO,MAAMG,OAAO,GAAG,MAAM;AAAA;;AAC3B,SAAOJ,UAAU,CAACG,WAAD,CAAjB;AACD,CAFM;;GAAMC,O;;AAIb,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC,CADyC,CAGzC;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,OAAf,GAAyB;AACvB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,WAAV,CAAvB;AACAH,QAAAA,OAAO,CAACE,QAAQ,CAACE,IAAV,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACD,OALD,CAKE,OAAOG,KAAP,EAAc;AACdP,QAAAA,OAAO,CAAC,IAAD,CAAP;AACA,eAAO,IAAP;AACD;AACF;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEG,GA3BQ,EA2BN,EA3BM,CAAT,CALyC,CAkCzC;;AACA,QAAMQ,KAAK,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC1C,QAAI;AACF,YAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAN,CAAW,cAAX,EAA2B;AAChDF,QAAAA,QAAQ,EAAEA,QADsC;AAEhDC,QAAAA,QAAQ,EAAEA;AAFsC,OAA3B,CAAvB;AAIAV,MAAAA,OAAO,CAACE,QAAQ,CAACE,IAAV,CAAP;AACA,aAAOF,QAAQ,CAACE,IAAhB;AACD,KAPD,CAOE,OAAOG,KAAP,EAAc;AACd,aAAO,IAAP;AACD;AACF,GAXD,CAnCyC,CAgDzC;;;AACA,QAAMK,QAAQ,GAAG,CAACC,KAAD,EAAQH,QAAR,KAAqB;AACpCL,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,WAAO,IAAP,CAFoC,CAGpC;AACD,GAJD,CAjDyC,CAuDzC;;;AACA,QAAMQ,MAAM,GAAG,YAAY;AACzB,QAAI;AACF,YAAMZ,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,eAAV,CAAvB;AACAH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAHD,CAGE,OAAOO,KAAP,EAAc;AACd,aAAO,IAAP;AACD;AACF,GAPD;;AASA,QAAMQ,IAAI,GAAG;AACXhB,IAAAA,IADW;AAEXS,IAAAA,KAFW;AAGXM,IAAAA,MAHW;AAIXF,IAAAA;AAJW,GAAb;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,IAA7B;AAAA,cAAoCjB;AAApC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IAzEeD,Y;;KAAAA,Y","sourcesContent":["// from https://usehooks.com/useAuth/\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport axios from \"./axios\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState();\n\n  // This effect runs on refresh / component rendering\n  // Saves user into AuthProvider context (read from localStorage)\n  useEffect(() => {\n    async function meQuery() {\n      try {\n        const response = await axios.get(\"/users/me\");\n        setUser(response.data);\n        console.log(\"Me query resulted in:\");\n        console.log(response.data);\n      } catch (error) {\n        setUser(null);\n        return null;\n      }\n    }\n\n    /*\n    console.log(\"Use effect Started\");\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      console.log(\"user found in session storage:\");\n      setUser(user);\n      console.log(user);\n    } else {\n      console.log(\"user not found in session storage.\");\n      setUser(null);\n    }\n\n    console.log(user);\n    console.log(\"useEffect Ends\");*/\n  }, []);\n\n  // Logs in user\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post(\"/users/login\", {\n        username: username,\n        password: password,\n      });\n      setUser(response.data);\n      return response.data;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  // Register new user\n  const register = (email, password) => {\n    console.log(\"register() is NOT IMPLEMENTED\");\n    return null;\n    //return user\n  };\n\n  //Logs out user\n  const logout = async () => {\n    try {\n      const response = await axios.get(\"/users/logout\");\n      setUser(null);\n    } catch (error) {\n      return null;\n    }\n  };\n\n  const auth = {\n    user,\n    login,\n    logout,\n    register,\n  };\n\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}